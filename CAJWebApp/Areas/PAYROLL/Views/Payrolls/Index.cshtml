@using CAJWebApp.Controllers
@using LIBWebMVC
@model IEnumerable<CAJWebApp.Areas.PAYROLL.Models.PayrollsModel>

@{
    ViewBag.Root = "Payroll";
    ViewBag.Title = "Index";

    bool hasApprovalAccess = UtilWebMVC.hasAccess(Session, OperatorController.SESSION_OperatorPrivilegePayrollModel_PayrollApproval);
}

<div class="content-wrapper">
    <!-- Content area -->
    <div class="content">
        <!-- Form inputs -->
        <div class="card animated bounceInLeft">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">@ViewBag.Root</h5>
            </div>
            <div class="card-body">
                <div class="row mt-0">
                    <div class="col-lg-3">
                        <div class="row col-lg-12">
                            <label class="mb-0">Periode</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <button type="button" class="btn btn-light" onclick="showLoadingSpinner();ReloadTable('@EnumActions.Previous.ToString()')">&lt;</button>
                                    <select id="PayPeriodMonth" class="form-control select2" onchange="ReloadTable()">
                                        <option value="1">January</option>
                                        <option value="2">February</option>
                                        <option value="3">March</option>
                                        <option value="4">April</option>
                                        <option value="5">May</option>
                                        <option value="6">June</option>
                                        <option value="7">July</option>
                                        <option value="8">August</option>
                                        <option value="9">September</option>
                                        <option value="10">October</option>
                                        <option value="11">November</option>
                                        <option value="12">December</option>
                                    </select>
                                </div>
                                <input id="PayPeriodYear" type="number" class="form-control text-center positiveintegeronly" value="@ViewBag.PayPeriodYear">
                                <button type="button" class="btn btn-light" onclick="showLoadingSpinner();ReloadTable('@EnumActions.Next.ToString()')">&gt;</button>
                            </div>
                        </div>
                    </div>
                    <div class="row col-lg-1">
                        <div class="col-lg-12">
                            <label class="mb-0">Tgl Bayar</label>
                            <div class="input-group">
                                @Html.DropDownList("PayrollPaymentDates", ViewBag.PayrollPaymentDates as SelectList, "ALL", new { @class = "custom-select", @style = "height:auto;", onchange = "ReloadTable()" })
                            </div>
                        </div>
                    </div>
                    <div class="row col-lg-2">
                        <div class="col-lg-12">
                            <label class="mb-0">Bank</label>
                            <div class="input-group">
                                @Html.DropDownList("Banks", ViewBag.Banks as SelectList, "ALL", new { @class = "custom-select", @style = "height:auto;", onchange = "ReloadTable()" })
                            </div>
                        </div>
                    </div>
                    <div class="row col-lg-2">
                        <div class="col-lg-10">
                            <label class="mb-0">Approval</label>
                            <div class="input-group">
                                <select id="FILTER_Approval" class="custom-select" onchange="ReloadTable()">
                                    <option value="" selected>ALL</option>
                                    <option value="1">Approved</option>
                                    <option value="0">Not Approved</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row col-lg-2">
                        <div class="col-lg-12">
                            <label class="mb-0">&nbsp;</label>
                            <div class="form-group mb-0">
                                <div class="btn-toolbar">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-outline-primary form-control" onclick="showLoadingSpinner();ReloadTable()"><i class="icon-reload-alt mr-2"></i>SEARCH</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-lg-1">
                        <div class="form-group mb-0">
                            <div class="btn-toolbar">
                                <div class="btn-group">
                                    <button onclick="showLoadingSpinner();Create()" class="btn btn-success">ADD<i class="icon-plus22 ml-2"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group mb-0">
                            <div class="btn-toolbar">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-outline-success form-control" onclick="PrintToPdf()"><i class="icon-file-pdf mr-2"></i>PDF</button>
                                    <button type="button" class="btn btn-outline-success form-control" onclick="GenerateReport()"><i class="icon-coins mr-2"></i>Report</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-7">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white">Approved Total</span>
                            </div>
                            <input type="text" class="form-control text-right" value="@ViewBag.TotalApprovedPayableAmount" readonly>
                            <div class="input-group-prepend ml-1">
                                <span class="input-group-text bg-white">Approved Due</span>
                            </div>
                            <input type="text" class="form-control text-right" value="@ViewBag.TotalApprovedDueAmount" readonly>
                            <button type="button" class="btn btn-outline-warning form-control ml-1" onclick="showLoadingSpinner();CreatePayments()"><i class="icon-coins mr-2"></i>Create Payments</button>
                        </div>
                    </div>
                </div>

                <div class="table-responsive mt-2">
                    <table class="table table-hover datatable">
                        <thead>
                            <tr>
                                <th style="width:10px;">No</th>
                                <th>Nama/Counter/Tgl Bayar</th>
                                <th class="text-right">Cuti</th>
                                <th class="text-right">Gaji</th>
                                <th class="text-right">Tabungan</th>
                                <th class="text-right">Hutang</th>
                                <th class="text-right non-searchable non-sortable"></th>
                                @if (hasApprovalAccess) 
                                {
                                    <th class="text-center non-searchable non-sortable" style="width:10px;">OK</th>
                                }
                                <th class="non-searchable non-sortable" style="width:110px;"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null) { 
                                var rowCount = 0;
                                foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.RowNumber)</td>
                                        <td>
                                            @Html.ActionLink(item.EmployeeFullName, "Index", "PayrollEmployees", new { Area = "", search = item.EmployeeFullName }, new { target = "_blank" })
                                            <br />@Html.DisplayFor(modelItem => item.CustomerName)
                                            <br />Tgl Bayar: @Html.DisplayFor(modelItem => item.PayrollPaymentDates_PayDate)
                                        </td>
                                        <td class="text-right">
                                            Awal: @Html.DisplayFor(modelItem => item.LeaveDaysStartingBalance)
                                            <br />Update: @Html.DisplayFor(modelItem => item.LeaveDaysAdjustment)
                                            <br />Saldo: @(string.Format("{0:N0}", item.LeaveDaysStartingBalance+@item.LeaveDaysAdjustment))
                                        </td>
                                        <td class="text-right">
                                            Pokok: @Html.DisplayFor(modelItem => item.SalaryAmount)
                                            <br />Tambahan: @Html.DisplayFor(modelItem => item.EarningsAmount)
                                            <br />Potongan: @Html.DisplayFor(modelItem => item.DeductionsAmount)
                                        </td>
                                        <td class="text-right">
                                            Awal: @Html.DisplayFor(modelItem => item.MandatoryDepositStartingBalance)
                                            <br />Update: @Html.DisplayFor(modelItem => item.MandatoryDepositUpdateAmount)
                                            <br />Saldo: @(string.Format("{0:N0}", item.MandatoryDepositStartingBalance + @item.MandatoryDepositUpdateAmount))
                                        </td>
                                        <td class="text-right">
                                            Awal: @Html.DisplayFor(modelItem => item.DebtStartingBalance)
                                            <br />Update: @Html.DisplayFor(modelItem => item.DebtUpdateAmount)
                                            <br />Saldo: @(string.Format("{0:N0}", item.DebtStartingBalance + @item.DebtUpdateAmount))
                                        </td>
                                        <td class="text-right">
                                            Total: @Html.DisplayFor(modelItem => item.PayableAmount)
                                            <br />Payment:
                                            @if (item.PaymentAmount != 0)
                                            {
                                                <span class="font-weight-semibold text-primary">
                                                    @Html.ActionLink(item.PaymentAmount.ToString("N0"), "Index", "PayrollPayments", new { Area = "Payroll", PayPeriod = item.PayPeriod.ToShortDateString(), search = item.EmployeeFullName }, new { target = "_blank" })
                                                </span>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(modelItem => item.PaymentAmount)
                                            }
                                            <br />DUE: <span class="font-weight-semibold text-warning">@(string.Format("{0:N0}", item.PayableAmount - @item.PaymentAmount))</span>
                                        </td>
                                        @if (hasApprovalAccess) 
                                        {
                                            <td class="align-top" style="text-align:center;">
                                                <input type="checkbox" id='@("chkApproval_" + ++rowCount)' onclick="UpdateApproval(this, '@item.Id', '@item.EmployeeFullName')" @(item.ApprovalOperator_ID != null ? "checked" : "") />
                                            </td>
                                        }
                                        <td class="align-top">
                                            <a href="@Url.Action("Print","Payrolls",new { id = item.Id })" target="_blank">View</a>
                                            • @Html.ActionLink("PDF", "PrintToPdf", new { id = item.Id, name = item.EmployeeFullName, payPeriod = item.PayPeriod })
                                            <br/><a href="javascript:void(0)" onclick="Log('@item.Id')">Log</a>

                                            <a href="javascript:void(0)" id='@("lnkEdit_" + rowCount)' class='@(item.ApprovalOperator_ID == null ? "" : "d-none")' onclick="Edit('@item.Id')">• Edit</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- /form inputs -->
    </div>
    <!-- /content area -->
</div>



<script type="text/javascript">

    $(document).ready(function () {
        activateMenu('Payrolls');

        $('#PayPeriodMonth').val('@ViewBag.PayPeriodMonth');
        $('#PayPeriodYear').val('@ViewBag.PayPeriodYear');
        $('#Banks').val('@ViewBag.Banks_Id');
        $('#FILTER_Approval').val('@ViewBag.Approval');

        $('#PayrollPaymentDates').append('<option value="" disabled selected>ALL</option>'); //add placeholder
        $('#PayrollPaymentDates option:selected').text(@ViewBag.PayDate);

        if('@ViewBag.Search' != null && '@ViewBag.Search' != '')
            setSearch('@ViewBag.Search');
    });

    function ReloadTable(periodChange) {
        var url = '@Url.Action("Index","Payrolls",new { year = "__data" })';
        window.location.href = url.replace("__data", getAllFilterString() + (periodChange != null ? "&periodChange=" + periodChange : ''));
    }

    function Create() {
        var url = '@Url.Action("Create", "Payrolls",new { year = "__data" })';
        window.location.href = url.replace("__data", getAllFilterString());
    }

    function Edit(id) {
        var url = '@Url.Action("Edit", "Payrolls",new { id = "__data" })';
        window.location.href = url.replace("__data", id + "?year=" + getAllFilterString());
    }

    function PrintToPdf() {
        var url = '@Url.Action("PrintToPdf", "Payrolls",new { year = "__data" })';
        window.location.href = url.replace("__data", getAllFilterString());
    }

    function GenerateReport() {
        var bankId = $('#Bank').val();
        var url = '@Url.Action("Report", "Payrolls", new { year = "__data" })';
        window.location.href = url.replace('__data', getAllFilterString() + '&bankId=' + bankId);
    }

    function CreatePayments() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("CreatePayments", "PayrollPayments")',
            data: {
                year: $('#PayPeriodYear').val(),
                month: $('#PayPeriodMonth').val(),
                actionType: @((int)EnumActionTypes.Payroll),
                payDate: parseInt($('#PayrollPaymentDates option:selected').text()),
            },
            success: function (data) {
                bootbox.alert({
                    backdrop: true,
                    message: data.insertCount + " pembayaran telah dibuat",
                    callback: function() {
                        ReloadTable();
                    }
                });
            }, //end success
            error: function (result) {
                bootbox.alert({ backdrop: true, message: "Error " + result });
            } //end error
        }); //end ajax
    }

    function UpdateApproval(control, id, employeeName) {
        var confirmationMessage = "Konfirmasi approval ";
        if (!control.checked)
            confirmationMessage = "Konfirmasi cancel approval "

        confirmationMessage += employeeName + "?";

        var elementId = $(control).prop('id');
        if (confirm(confirmationMessage)) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("update_ApprovalOperator_ID", "Payrolls")',
                data: { id: id, value: control.checked },
                success: function (data) {
                    if (data.Message != '') {
                        toggleCheckboxValue(elementId);
                        bootbox.alert({ backdrop: true, message: data.Message });
                    } else {
                        toggleVisibility(elementId);
                    }
                },
                error: function (result) {
                    toggleCheckboxValue($(control).prop('id'));
                    bootbox.alert({ backdrop: true, message: "Error " + result });
                }
            });
        } else {
            toggleCheckboxValue($(control).prop('id'));
        }
    }

    function getRowNo(id) {
        return id.substring(id.indexOf('_') + 1, id.length);
    }

    function toggleVisibility(id) {
        var lnkEditId = 'lnkEdit_' + getRowNo(id);

        if ($('#' + lnkEditId).hasClass('d-none')) 
            $('#' + lnkEditId).removeClass('d-none');
        else
            $('#' + lnkEditId).addClass('d-none');
    }

</script>

